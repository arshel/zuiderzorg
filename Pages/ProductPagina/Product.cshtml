@page
@model BlikModel
@using zuiderzorg.Models
<head>
    <link href="~/css/ProductStyle.css" rel="stylesheet"/>
</head>

<body style="background-color:#E9E2E2;">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
    <div class="row">
        <div class="col">
            <div class="button1">
                <button class="Back" onclick="GoBack()"> <img src="/images/CatagoryIcons/BackIcon.png" height=100 width=100 /><br /> <strong>Terug</strong></button>
            </div>
            <div class="button2">
                <button class="Help" onclick="JavaScript:alert('This button is under construction, please remain calm.')">  <img src="/images/CatagoryIcons/InfoIcon.png" height=150 width=150 /><br /> <strong>Vraag om hulp</strong></button>
            </div>
        </div>
        <div class="col-7">
            <div class="ProductInfo">
                @{var db = new CategoryContext();}
                @{var ProductInfo = db.Products.Where(x => x.ProductId == Guid.Parse(Request.Cookies["ProductId"])).ToArray();}
                <div class="image">
                    <img id="productImage" src="/images/@ProductInfo[0].Image" alt="BlikopenerFoto">
                </div>
                <div class="productName">@ProductInfo[0].Name
                    <div class="productDescription">@ProductInfo[0].Description</div>
                </div>
                <div class="productPrice">€@ProductInfo[0].PriceMin - €@ProductInfo[0].PriceMax</div>
                <button type="button" class="btn Buy" data-bs-toggle="modal" data-bs-target="#Popup" value="Buy" onclick="ClickedButton(value)">  <i class="bi bi-cart-fill" style="font-size:5vw;color:#6CBF2A;position:relative;"></i> <br /> <strong>Naar bestelpagina</strong></button>
            </div>
            <script>
                window.productName = "@ProductInfo[0].Name";
                window.productImage = "temp";
                window.productHref = "temp";
                window.productPrice = "€@ProductInfo[0].PriceMin";
                window.productGUID = "@ProductInfo[0].ProductId";
            </script>
        </div>
        <div class="col">
            <button type="button" class="btn Experience" data-bs-toggle="modal" data-bs-target="#Popup" value="Experience" onclick="ClickedButton(value)">  <i class="bi bi-play-circle-fill" style="font-size:6vw;color:#6CBF2A;position:relative;"></i> <br /> <strong>Ervaringen van <br>anderen</strong></button>
            <button class="btn ShoppingCart" onclick="FavouritesToggle()"> <i class="bi bi-star" style="font-size:6vw;color:#6CBF2A;position:relative;visibility:visible"></i>  <i class="bi bi-star-fill" style="font-size:6vw;color:#6CBF2A;position:absolute;margin-left:-37%;visibility:hidden"></i> <br/> <strong class="FavouritesText">In favorieten <br>plaatsen</strong></button>
        </div>
        <div class="modal fade" id="Popup" tabindex="-1" aria-labelledby="LeavePopup" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title tlink" id="exampleModalLabel"></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body blink">
                        Als u op "Doorgaan" klikt wordt u doorverwezen naar. Als u de pagina niet wilt verlaten kunt u op "Terug" drukken.
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Terug</button>
                        <button type="button" class="btn btn-primary" onclick="ToPage()">Doorgaan</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    // Variable to store the next location from a popup.
    var Nextlocation = {};

    // Function to set the next location for a popup depending if clicked on the buy button or experience button.
    function ClickedButton(arg) {
    @{
        var db = new CategoryContext();
    }
    @{
        var ProductInfo = db.Products.Where(x => x.ProductId == Guid.Parse(Request.Cookies["ProductId"])).ToArray();
    }

        Nextlocation = "";
        if (arg == "Buy") {
            Nextlocation = "@ProductInfo[0].StoreLink";
        } else {
            Nextlocation = "@ProductInfo[0].ExpLinks";
        }
        Weblink = (new URL(Nextlocation)).hostname;

        document.getElementsByClassName("tlink")[0].innerHTML = "U wordt doorverwezen naar '" + Weblink + "'"; 
        document.getElementsByClassName("blink")[0].innerHTML = "Als u op 'Doorgaan' klikt wordt u doorverwezen naar " + "'" + Weblink + "'" + ". Als u de pagina niet wilt verlaten kunt u op 'Terug' drukken.";
    }

    // Function to go to the next page after a popup. Also removes the popup.
    function ToPage() {
        window.open(Nextlocation);
        location.reload();
    }

    // Function to go back with the back button.
    function GoBack() {
        location.href = "http://localhost:5090/nl/productenselectie";
    }

    // Function to toggle a product in or out favourites.
    function FavouritesToggle() {
        var text = document.getElementsByClassName("FavouritesText");
        var textstring = text[0].innerHTML;

        if (textstring.includes("In favorieten <br>plaatsen")) {
            $(".FavouritesText").html("Uit favorieten <br>verwijderen");
        } else {
            $(".FavouritesText").html("In favorieten <br>plaatsen");
        }

        var visibility = document.getElementsByClassName("bi bi-star")[0].style.visibility;
        if (visibility == "visible") {
            AddFavourites();
            document.getElementsByClassName("bi bi-star-fill")[0].style.visibility = "visible";
            document.getElementsByClassName("bi bi-star")[0].style.visibility = "hidden";
        } else {
            DeleteFavourites();
            document.getElementsByClassName("bi bi-star-fill")[0].style.visibility = "hidden";
            document.getElementsByClassName("bi bi-star")[0].style.visibility = "visible";
        }
    }


    // Function to add a product into favourites.
    function AddFavourites() {
        const product = {
            name: window.productName,
            image: window.productImage,
            href: window.productHref, 
            price: window.productPrice,
            GUIDfield: window.productGUID
        }

        var keystring = "FAVOURITEDPRODUCT:" + product.GUIDfield;

        localStorage.setItem(keystring, JSON.stringify(product));
    }

    // Function to delete a product from favourites.
    function DeleteFavourites() {
        localStorage.removeItem(localStorage.key(window.productGUID));
    }

    // Function to change the text and icon based on the product being favourited or not.
    function StarFill(object) {
        if (object.name != null) {
            if (window.productGUID == object.GUIDfield) {
                $(".FavouritesText").html("Uit favorieten <br>verwijderen");
                document.getElementsByClassName("bi bi-star")[0].style.visibility = "hidden";
                document.getElementsByClassName("bi bi-star-fill")[0].style.visibility = "visible";
            }
        }
    }

    // Onload function. Checks what the current product is and if that product is favourited.
    window.onload = function () { 
        var values = [];
        keys = Object.keys(localStorage);

        for (var i = 0; i < keys.length; i++) {
            if (keys[i].indexOf("FAVOURITEDPRODUCT:") != -1) {
                values.push(JSON.parse(localStorage.getItem(keys[i])));
            }
        }
        values.forEach(StarFill);
    };

</script>