@page
@model BlikModel
@using zuiderzorg.Models
<head>
    <link href="~/css/ProductStyle.css" rel="stylesheet"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
</head>

<body style="background-color:#E9E2E2;">
    <div class="container-xxl container-fluid">
        <div class="row row-cols-3 justify-content-center">
            <div class="row row-cols-1">
                <div class="col-md-10 col-lg-8">
                    <a class="product btn" asp-route-culture="@Request.RouteValues["culture"]" asp-page="/productenselectie" data-bs-toggle="popover" data-bs-trigger="manual" data-bs-title="@localizer.Get("Terug")" data-bs-content="@localizer.Get("Met deze knop kunt u terug naar de vorige pagina.")" data-bs-placement="bottom">
                        <img class="img-fluid" style="margin-top: 25%;" src="/images/CatagoryIcons/BackIcon.png" height=100 width=100/>
                        <br/>
                        <strong>@localizer.Get("Terug")</strong>
                    </a>
                    
                    <button class="product" onclick="TogglePopovers()">
                        @* <img class="img-fluid imgIcons" src="/images/CatagoryIcons/InfoIcon.png" height=150 width=150/> *@
                        <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="60%" fill="#6CBF2A" class="bi bi-info-square" viewBox="0 0 16 16">
                          <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
                          <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                        </svg>
                        <br/>
                        <strong>@localizer.Get("Informatie")</strong>
                    </button>
                </div>
            </div>
            <div class="col-xxl-4 ProductInfo">
                <div class="container-fluid">
                    @{
                        var db = new CategoryContext();
                        var ProductInfo = db.Products.Where(x => x.ProductId == Guid.Parse(Request.Cookies["ProductId"])).ToArray();

                    }
                    <div class="image" style="padding-bottom: 20%;">
                        <img class="img-fluid" src="/images/@ProductInfo[0].Image" alt="ProductFoto">
                    </div>
                    <div class="productName" style="padding-bottom: 5%;">@ProductInfo[0].Name</div>
                    <div class="productDescription" style="padding-bottom: 5%;">@ProductInfo[0].Description</div>
                    <div class="productPrice" style="padding-bottom: 10%;">€@ProductInfo[0].PriceMin - €@ProductInfo[0].PriceMax</div>
                    <button type="button" class="Buy" data-bs-toggle="modal" data-bs-target="#Popup" value="Buy" onclick="ClickedButton(value)">
                        <i class="bi bi-cart-fill" style="font-size:5vw;color:#6CBF2A;position:relative;"></i> 
                        <br/> 
                        <strong>@localizer.Get("Naar bestelpagina")</strong>
                    </button>
                    <script>
                            window.productName = "@ProductInfo[0].Name";
                            window.productImage = "@ProductInfo[0].Image";
                            window.productPrice = "€@ProductInfo[0].PriceMin";
                            window.productGUID = "@ProductInfo[0].ProductId";
                        </script>
                </div>
            </div>
            <div class="row">
                <div class="col-md-10 col-lg-8 offset-md-2 offset-lg-6">
                    <button type="button" class="product" data-bs-toggle="modal" data-bs-target="#Popup" value="Experience" onclick="ClickedButton(value)" data-bs-toggle="popover" data-bs-trigger="manual" data-bs-title="@localizer.Get("Terug")" data-bs-content="@localizer.Get("Met deze knop kunt u terug naar de vorige pagina.")" data-bs-placement="right">
                        @* <i class="bi bi-play-circle-fill" style="font-size:400%;color:#6CBF2A;position:relative;"></i> *@
                        <svg xmlns="http://www.w3.org/2000/svg" width="60%" height="50%" fill="#6CBF2A" class="bi bi-play-circle-fill" viewBox="0 0 16 16">
                            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z"/>
                        </svg>
                        <br/>
                        <strong>@localizer.Get("Ervaringen van anderen")</strong>
                    </button>

                    <button class="product" onclick="FavouritesToggle()" data-bs-toggle="popover" data-bs-trigger="manual" data-bs-title="@localizer.Get("In favorieten plaatsen")" data-bs-content="@localizer.Get("Met deze knop kunt u het product aan uw favorieten plaatsen.")" data-bs-placement="top">
                        <i class="bi bi-star-fill favoswitch" style="font-size: 300%;color: #6CBF2A;"></i>
                        <br/> 
                        <strong class="FavouritesText">@localizer.Get("In favorieten plaatsen")</strong>
                    </button>
                </div>
            </div>
            <div class="alert alert-success" id="AddAlert" role="alert">
                Het product is toegevoegd aan uw winkelwagen.
            </div>
            <div class="alert alert-danger" id="DeleteAlert" role="alert">
                Het product is verwijderd uit uw winkelwagen.
            </div>
            <div class="modal fade" id="Popup" tabindex="-1" aria-labelledby="LeavePopup" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title tlink" id="exampleModalLabel"></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body blink">
                            Als u op "Doorgaan" klikt wordt u doorverwezen naar. Als u de pagina niet wilt verlaten kunt u op "Terug" drukken.
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Terug</button>
                            <button type="button" class="btn btn-primary" onclick="ToPage()">Doorgaan</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    // Variable to store the next location from a popup.
    var Nextlocation = {};

    // Function to set the next location for a popup depending if clicked on the buy button or experience button.
    function ClickedButton(arg) {
    @{
        var db2 = new CategoryContext();
    }
    @{
        var ProductInfo2 = db2.Products.Where(x => x.ProductId == Guid.Parse(Request.Cookies["ProductId"])).ToArray();
    }

        Nextlocation = "";
        if (arg == "Buy") {
            Nextlocation = "@ProductInfo2[0].StoreLink";
        } else {
            Nextlocation = "@ProductInfo2[0].ExpLinks";
        }
        Weblink = (new URL(Nextlocation)).hostname;

        document.getElementsByClassName("tlink")[0].innerHTML = "U wordt doorverwezen naar '" + Weblink + "'"; 
        document.getElementsByClassName("blink")[0].innerHTML = "Als u op 'Doorgaan' klikt wordt u doorverwezen naar " + "'" + Weblink + "'" + ". Als u de pagina niet wilt verlaten kunt u op 'Terug' drukken.";
    }

    // Function to go to the next page after a popup. Also removes the popup.
    function ToPage() {
        window.open(Nextlocation);
        location.reload();
    }

    // Function to go back with the back button.
    function GoBack() {
        location.href = "http://localhost:5090/nl/productenselectie";
    }

    function CloseAlert() {
        $("#AddAlert").hide();
        $("#DeleteAlert").hide(); 
    }

    // Function to toggle a product in or out favourites.
    function FavouritesToggle() {
        var text = document.getElementsByClassName("FavouritesText");
        var textstring = text[0].innerHTML;

        if (textstring.includes("In favorieten <br>plaatsen")) {
            $(".FavouritesText").html("Uit favorieten <br>verwijderen");
        } else {
            $(".FavouritesText").html("In favorieten <br>plaatsen");
        }

        // // var visibility = document.getElementsByClassName("bi bi-star")[0].style.visibility;
        // if (visibility == "visible") {
        //     AddFavourites();
            // document.getElementsByClassName("bi bi-star-fill")[0].style.visibility = "visible";
        //     document.getElementsByClassName("bi bi-star")[0].style.visibility = "hidden";
        //     CloseAlert();
        //     $("#AddAlert").fadeTo(2000, 500).slideUp(500, function() {
        //         $("#AddAlert").slideUp(500);
        //     });
        // } else {
        //     DeleteFavourites();
        //     document.getElementsByClassName("bi bi-star-fill")[0].style.visibility = "hidden";
        //     document.getElementsByClassName("bi bi-star")[0].style.visibility = "visible";
        //     CloseAlert();
        //     $("#DeleteAlert").fadeTo(2000, 500).slideUp(500, function() {
        //         $("#DeleteAlert").slideUp(500);
        //     });
        // }
        
            let favoriteCheck = document.getElementsByClassName("favoswitch")[0];
            if ($(favoriteCheck).hasClass("bi-star")) {
                console.log("filled");
                AddFavourites();
                $(favoriteCheck).toggleClass("bi-star");
                $(favoriteCheck).toggleClass("bi-star-fill");
                CloseAlert();
                $("#AddAlert").fadeTo(2000, 500).slideUp(500, function() {
                    $("#AddAlert").slideUp(500);
                });
            } else {
                console.log("UNfilled");
                DeleteFavourites();
                $(favoriteCheck).toggleClass("bi-star-fill");
                $(favoriteCheck).toggleClass("bi-star");
                CloseAlert();
                $("#DeleteAlert").fadeTo(2000, 500).slideUp(500, function() {
                    $("#DeleteAlert").slideUp(500);
                });
            }
    }

    @* function VideoAvailability() {
        if (@ProductInfo[0].Video == ""){
            document.getElementsByClassName("Experience")[0].style.background = grey;
            document.getElementsByClassName("Experience")[0].innerHTML = Geen video beschikbaar;
            //De button niet clickable maken
        }
    } *@

    // Function to add a product into favourites.
    function AddFavourites() {
        const product = {
            name: window.productName,
            image: window.productImage, 
            price: window.productPrice,
            GUIDfield: window.productGUID
        }

        var keystring = "FAVOURITEDPRODUCT:" + product.GUIDfield;

        localStorage.setItem(keystring, JSON.stringify(product));
    }

    // Function to delete a product from favourites.
    function DeleteFavourites() {
        localStorage.removeItem(localStorage.key(window.productGUID));
    }

    // Function to change the text and icon based on the product being favourited or not.
    // function StarFill(object) {
    //     if (object.name != null) {
    //         if (window.productGUID == object.GUIDfield) {
    //             $(".FavouritesText").html("Uit favorieten <br>verwijderen");
    //             document.getElementsByClassName("bi bi-star")[0].style.visibility = "hidden";
    //             document.getElementsByClassName("bi bi-star-fill")[0].style.visibility = "visible";
    //         }
    //     }
    // }

    // Onload function. Checks what the current product is and if that product is favourited.
    window.onload = function () { 
        $("#AddAlert").hide();
        $("#DeleteAlert").hide();

        var values = [];
        keys = Object.keys(localStorage);

        for (var i = 0; i < keys.length; i++) {
            if (keys[i].indexOf("FAVOURITEDPRODUCT:") != -1) {
                values.push(JSON.parse(localStorage.getItem(keys[i])));
            }
        }
        // values.forEach(StarFill);
        // VideoAvailability();
    };

</script>